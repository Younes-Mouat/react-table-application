{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","products_data","_filterUpdated","bind","newData","filtersObject","this","setState","updatedData","defaultPageSize","data","columns","Header","accessor","rows","onFilterUpdate","filterkey","className","casesensitive","showsearch","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"i54DASqBA,G,wDACnB,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CAGX,YAAeC,GAEjB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBAPN,E,2DAUHC,EAASC,GACtBC,KAAKC,SAAS,CACZ,YAAeH,M,+BAMjB,IAAMI,EAAcF,KAAKN,MAAMQ,YA4EjC,OACE,gCACE,cAAC,IAAD,CACFC,gBAAiB,GACjBC,KAAMF,EAKNG,QApFgB,CAAC,CACfC,OAAQ,WACRC,SAAU,YAEV,CACAD,OAAQ,iBACRD,QAAS,CACP,CACEC,OAAQ,OACRC,SAAU,yBAEZ,CACED,OAAQ,WACRC,SAAU,6BAEZ,CACED,OAAQ,QACRC,SAAU,4BAIf,CACGD,OAAQ,KACRC,SAAU,OAEb,CACAD,OAAQ,OACRC,SAAU,QAEV,CACCD,OAAQ,cACRC,SAAU,eAEV,CACAD,OAAQ,WACRC,SAAU,YAET,CACCD,OAAQ,cACRC,SAAU,eAEb,CACAD,OAAQ,YACRC,SAAU,aAEV,CACCD,OAAQ,YACRC,SAAU,aAEV,CACAD,OAAQ,IACRC,SAAU,OAET,CACCD,OAAQ,UACRC,SAAU,WAEb,CACAD,OAAQ,MACRC,SAAU,OAEV,CACCD,OAAQ,YACRC,SAAU,aAEV,CACAD,OAAQ,OACRC,SAAU,QAET,CACCD,OAAQ,YACRC,SAAU,gBAejB,eAAC,IAAD,CACCC,KAAMN,EACNO,eAAgBT,KAAKJ,eAFtB,UAGC,oBAAmBc,UAAU,WAAWC,UAAU,OAAOC,cAAe,OAAQC,WAAY,OAA5F,qBAAQ,YAGR,oBAAIH,UAAU,cAAd,mC,GAhH+BI,cCGlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b7d0951.chunk.js","sourcesContent":["import React, { Component } from 'react'\n//import axios from 'axios'\nimport products_data from \"./product_data.json\"\nimport ReactTable from \"react-table\"; \nimport 'react-table/react-table.css';\n//import { Form} from 'react-bootstrap';\nimport TableFilter from 'react-table-filter';\nimport 'react-table-filter/lib/styles.css';\n\nexport default class App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      //products: [],\n      //loading:true,\n      'updatedData': products_data\n    };\n    this._filterUpdated = this._filterUpdated.bind(this);\n  }\n\n  _filterUpdated(newData, filtersObject) {\n    this.setState({\n      'updatedData': newData,\n    });\n  }\n\n  render() {\n\n    const updatedData = this.state.updatedData;\n    const columns = [{  \n      Header: 'Features',  \n      accessor: 'features',\n     }\n     ,{  \n      Header: 'Specifications', \n      columns: [\n        {\n          Header: \"Name\",\n          accessor: \"specifications.0.name\"\n        },\n        {\n          Header: \"Category\",\n          accessor: \"specifications.0.category\"\n        },\n        {\n          Header: \"Value\",\n          accessor: \"specifications.0.value\"\n        }\n      ] \n      }\n    ,{  \n        Header: 'ID',  \n        accessor: '_id' ,\n    }\n    ,{  \n     Header: 'Name',  \n     accessor: 'name',\n     },\n     {  \n      Header: 'Description',  \n      accessor: 'description',\n      },\n      {  \n      Header: 'Category',  \n      accessor: 'category',\n      }\n      ,{  \n        Header: 'Subcategory',  \n        accessor: 'subcategory',\n    }\n    ,{  \n     Header: 'CreatedAt',  \n     accessor: 'createdAt',\n     },\n     {  \n      Header: 'UpdatedAt',  \n      accessor: 'updatedAt',\n      },\n      {  \n      Header: 'V',  \n      accessor: '__v',\n      }\n      ,{  \n        Header: 'ModelId',  \n        accessor: 'modelId' ,\n    }\n    ,{  \n     Header: 'PID',  \n     accessor: 'pid',\n     },\n     {  \n      Header: 'Datasheet',  \n      accessor: 'datasheet',\n      },\n      {  \n      Header: 'Link',  \n      accessor: 'link',\n      }\n      ,{  \n        Header: 'Thumbnail',  \n        accessor: 'thumbnail' ,\n    }\n  ]\n\n  return (\n    <div>\n      <ReactTable  \n    defaultPageSize={10}\n    data={updatedData} \n    /*filtered={[{ \n      id: 'subType',\n      value: this.state.subtype,\n    }]}*/ \n    columns={columns}  \n />\n <TableFilter\n  rows={updatedData}\n  onFilterUpdate={this._filterUpdated}>\n  <th key=\"category\" filterkey=\"category\" className=\"cell\" casesensitive={'true'} showsearch={'true'}>\n    Category\n  </th>\n  <th filterkey=\"subcategory\">\n    Subcategory\n  </th>\n</TableFilter>\n    </div>\n    \n    \n  )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}